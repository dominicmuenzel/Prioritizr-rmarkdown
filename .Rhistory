# clean up feature IDs
row.names(g) <- as.character(1:length(g))
#Convert to SpatialPolygonsDataframe with column of ID
g <- SpatialPolygonsDataFrame(g, data.frame("ID"=row.names(g)))
# Calculate the area for each polygon
g$area <- as.numeric(gArea(g,byid=T))
return(g)
}
#Make a 100km2 hexagonal grid clipped to Aceh
hex_grid<-make_grid(study_area_utm, type = "hexagonal", cell_area = 100000000, clip = TRUE)
study_area_utm<-readOGR("E:/github/Prioritizr-rmarkdown","study_area_utm")
crs(study_area_utm)
make_grid <- function(x, type, cell_width, cell_area, clip = FALSE) {
if (!type %in% c("square", "hexagonal")) {
stop("Type must be either 'square' or 'hexagonal'")
}
if (missing(cell_width)) {
if (missing(cell_area)) {
stop("Must provide cell_width or cell_area")
} else {
if (type == "square") {
cell_width <- sqrt(cell_area)
} else if (type == "hexagonal") {
cell_width <- sqrt(2 * cell_area / sqrt(3))
}
}
}
# buffered extent of study area to define cells over
ext <- as(extent(x) + cell_width, "SpatialPolygons")
projection(ext) <- projection(x)
# generate grid
if (type == "square") {
g <- raster(ext, resolution = cell_width)
g <- as(g, "SpatialPolygons")
} else if (type == "hexagonal") {
# generate array of hexagon centers
g <- spsample(ext, type = "hexagonal", cellsize = cell_width, offset = c(0, 0))
# convert center points to hexagons
g <- HexPoints2SpatialPolygons(g, dx = cell_width)
}
# clip to boundary of study area
if (clip) {
g <- gIntersection(g, x, byid = TRUE)
} else {
g <- g[x, ]
}
# clean up feature IDs
row.names(g) <- as.character(1:length(g))
#Convert to SpatialPolygonsDataframe with column of ID
g <- SpatialPolygonsDataFrame(g, data.frame("ID"=row.names(g)))
# Calculate the area for each polygon
g$area <- as.numeric(gArea(g,byid=T))
return(g)
}
make_grid <- function(x, type, cell_width, cell_area, clip = FALSE) {
if (!type %in% c("square", "hexagonal")) {
stop("Type must be either 'square' or 'hexagonal'")
}
if (missing(cell_width)) {
if (missing(cell_area)) {
stop("Must provide cell_width or cell_area")
} else {
if (type == "square") {
cell_width <- sqrt(cell_area)
} else if (type == "hexagonal") {
cell_width <- sqrt(2 * cell_area / sqrt(3))
}
}
}
# buffered extent of study area to define cells over
ext <- as(extent(x) + cell_width, "SpatialPolygons")
projection(ext) <- projection(x)
# generate grid
if (type == "square") {
g <- raster(ext, resolution = cell_width)
g <- as(g, "SpatialPolygons")
} else if (type == "hexagonal") {
# generate array of hexagon centers
g <- spsample(ext, type = "hexagonal", cellsize = cell_width, offset = c(0, 0))
# convert center points to hexagons
g <- HexPoints2SpatialPolygons(g, dx = cell_width)
}
# clip to boundary of study area
if (clip) {
g <- gIntersection(g, x, byid = TRUE)
} else {
g <- g[x, ]
}
# clean up feature IDs
row.names(g) <- as.character(1:length(g))
#Convert to SpatialPolygonsDataframe with column of ID
g <- SpatialPolygonsDataFrame(g, data.frame("ID"=row.names(g)))
# Calculate the area for each polygon
g$area <- as.numeric(gArea(g,byid=T))
return(g)
}
#Make a 100km2 hexagonal grid clipped to Aceh
hex_grid<-make_grid(study_area_utm, type = "hexagonal", cell_area = 100000000, clip = TRUE)
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, border = "orange",add=T)
head(hex_grid)
hex_grid$area/1e6
#Get animal data
animals<- readOGR("E:/kent/june 2023 tutorial/gis/animals.shp")
# intersect grid with features
i <- terra::intersect(hex_grid, animals)
# compute area
i$area <- abs(area(i))
# get the attribute table
d <- data.frame(i)
# aggregate and sum the areas
m <- aggregate(d[, 'area', drop=FALSE], d[, c('ID', 'binomial')], sum)
puDF<-data.frame("id"=as.numeric(hex_grid$ID),"cost"=hex_grid$area/1e6)
featuresDF<-data.frame("id"=as.numeric(as.factor(sort(unique(m$binomial))
)),"name"=sort(unique(m$binomial)))
rijDF<-data.frame("pu"=as.numeric(m$ID),"species"=featuresDF$id[match(m$binomial,featuresDF$name)],"amount"=m$area/1e6)
#Create the prioritizr problem
p1 <- problem(puDF, featuresDF, cost_column = "cost",rij = rijDF) %>%
#Not implemented would require boundary file I think
# add_boundary_penalties(penalty = 0.005) %>%
#Add feature weights
#  add_feature_weights(weights/nrow(features)) %>%
add_default_solver(gap=0) %>%
#Add decisions
add_binary_decisions()
p1<- p1 %>%
#Add shortfall objective with budget
add_min_set_objective() %>%
#Add relative targets, 0.8 for animals, 1 for everything else
add_relative_targets(rep(0.3,nrow(featuresDF)))
s1<-solve(p1)
#Create 5 solutions which are within 10% optimality
p1_prt <- p1 %>% add_gap_portfolio(number_solutions = 5, pool_gap = 0.1)
#Solve the conservation planning problem
s1_prt<-solve(p1_prt)
colfunc <- colorRampPalette(c("white", "darkblue"))
colfunc(10)
colfunc(6)
colorvector<-rowSums(s1_prt[,3:7])
colorvector
colorvector<-recode(colorvector,0="#FFFFFF",
1="#CCCCE7",
2="#9999D0",
3="#6565B9",
4="#3232A2",
5="#00008B")
colorvector<-switch(colorvector,0="#FFFFFF",
1="#CCCCE7",
2="#9999D0",
3="#6565B9",
4="#3232A2",
5="#00008B")
colorvector
colorvector<-recode(colorvector,"0"="#FFFFFF",
"1"="#CCCCE7",
"2"="#9999D0",
"3"="#6565B9",
"4"="#3232A2",
"5"="#00008B")
colorvector<-rowSums(s1_prt[,3:7])
colorvector<-recode(colorvector,"0"="#FFFFFF",
"1"="#CCCCE7",
"2"="#9999D0",
"3"="#6565B9",
"4"="#3232A2",
"5"="#00008B")
colorvector
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
colorvector<-recode(colorvector,"0"=NA,
"1"="#CCCCE7",
"2"="#9999D0",
"3"="#6565B9",
"4"="#3232A2",
"5"="#00008B")
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
colorvector<-recode(colorvector,"0"=NULL,
"1"="#CCCCE7",
"2"="#9999D0",
"3"="#6565B9",
"4"="#3232A2",
"5"="#00008B")
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
colorvector<-rowSums(s1_prt[,3:7])
colorvector<-recode(colorvector,"0"=NULL,
"1"="#CCCCE7",
"2"="#9999D0",
"3"="#6565B9",
"4"="#3232A2",
"5"="#00008B")
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
colfunc <- colorRampPalette(c("white", "blue"))
colfunc(6)
colorvector<-rowSums(s1_prt[,3:7])
colorvector<-recode(colorvector,"0"=NULL,
"1"="#CCCCFF" ,
"2"="#9999FF" ,
"3"="#6565FF",
"4"="#3232FF",
"5"="#0000FF")
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.87, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),
fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.77, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.97, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
rcp1 <-
p1 %>%
add_default_solver(gap = 0, verbose = FALSE) %>%
eval_replacement_importance(s1$solution_1)
rcp1 <-
p1 %>%
add_default_solver(gap = 0, verbose = FALSE) %>%
eval_replacement_importance(data.frame(s1$solution_1))
rcp1$rc
# Create a color palette for the gradient
color_palette <- colorRampPalette(c("blue", "red"))
color_palette
color_palette(rcp1$rc)
# Create a color palette for the gradient
color_palette <- colorRampPalette(c("blue", "red"))c(4,5,2)
# Create a color palette for the gradient
color_palette <- colorRampPalette(c("blue", "red"))(4,5,2)
library(classInt)
library(RColorBrewer)
# Fake data
set.seed(1)
dat=data.frame(TP=rnorm(100,mean=10,sd=0.5),TN=rnorm(100,mean=2),DOC=rnorm(100,mean=10,sd=1)*0.5)
dat
# color gradient
n=5
pal <- rev(brewer.pal(n, "PuOr"))
int=classIntervals(dat$DOC,n)
#int=classIntervals(dat$DOC,n,style="fixed",fixedBreaks=seq(0,6,l=2));#if you want specific breaks
col=pal[findInterval(dat$DOC,int$brks,all.inside = T)]
# Point size gradient
pt.cex.vals=seq(0.8,3,l=n)
pt.cex.grad=pt.cex.vals[findInterval(dat$DOC,int$brks,all.inside = T)]
par(family="serif",mar=c(2.5,3,1,2),oma=c(2,1.75,1,1));
layout(matrix(c(1:4),1,4,byrow=T),width=c(1,0.5,0.5,0.5))
plot(TP~TN,dat,pch=21,bg=col,cex=pt.cex.grad)
#Continuous value color gradient
legend_image=as.raster(matrix(rev(pal),ncol=1))
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = '\n(Cont. example)')
text(x=1.5, y = seq(0,1,0.5), labels = format(round(int$brks[c(1,3,6)],1)),cex=1.25)
rasterImage(legend_image, 0, 0, 1,1)
#Disreate value color gradient
labs=NA
for(i in 1:n){labs[i]=paste(round(int$brks[i],1),round(int$brks[i+1],1),sep=" - ")}
plot(c(0,2),c(0,1),type = 'n', axes = F,xlab = '', ylab = '', main = '\n(discrete example)')
rect(
0,
head(seq(0,1,(1-0)/n),-1),
1,
tail(seq(0,1,(1-0)/n),-1),
col=pal
)
text(x=1.6, y = tail(seq(0,1,(1-0)/n),-1)-0.08, labels = labs,cex=1.25)
#mtext(side=4,line=-2,labs,at=tail(seq(0,1,(1-0)/n),-1)-0.08,las=2);# mtext version of adding labels
# Point size gradient legend
plot(0:1,0:1,axes=F,type="n",ylab=NA,xlab=NA)
legend(0.5,0.6,legend=rev(labs),pch=c(21),pt.bg="grey",lwd=0.1,lty=NA,pt.cex=rev(pt.cex.vals),ncol=1,cex=1,bty="n",y.intersp=1.75,x.intersp=0.75,xpd=NA,xjust=0.5,
title="Point Gradient\nExample")
###
dat
plot(TP~TN,dat,pch=21,bg=col,cex=pt.cex.grad)
int=classIntervals(dat$DOC,n)
int
int=classIntervals(rcp1$rc,n)
#int=classIntervals(dat$DOC,n,style="fixed",fixedBreaks=seq(0,6,l=2));#if you want specific breaks
col=pal[findInterval(dat$DOC,int$brks,all.inside = T)]
col
#int=classIntervals(dat$DOC,n,style="fixed",fixedBreaks=seq(0,6,l=2));#if you want specific breaks
color_palette=pal[findInterval(dat$DOC,int$brks,all.inside = T)]
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
layout(matrix(c(1:1),1,4,byrow=T),width=c(1,0.5,0.5,0.5))
plot(hex_grid, col=colorvector,border = "orange",add=T)
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
color_palette
#int=classIntervals(dat$DOC,n,style="fixed",fixedBreaks=seq(0,6,l=2));#if you want specific breaks
colorvector=pal[findInterval(dat$DOC,int$brks,all.inside = T)]
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
#int=classIntervals(dat$DOC,n,style="fixed",fixedBreaks=seq(0,6,l=2));#if you want specific breaks
colorvector=pal[findInterval(rcp1$rc,int$brks,all.inside = T)]
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
colorvector
plot(rcp1$rc)
plot(density(rcp1$rc))
rcp1$rc
max(rcp1$rc)
table(rcp1$rc)
# color gradient
n=10
pal <- rev(brewer.pal(n, "PuOr"))
int=classIntervals(rcp1$rc,n)
#int=classIntervals(dat$DOC,n,style="fixed",fixedBreaks=seq(0,6,l=2));#if you want specific breaks
colorvector=pal[findInterval(rcp1$rc,int$brks,all.inside = T)]
plot(density(rcp1$rc))
table(rcp1$rc)
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
colorvector
int$brks
#int=classIntervals(dat$DOC,n,style="fixed",fixedBreaks=seq(0,6,l=2));#if you want specific breaks
colorvector=pal[findInterval(rcp1$rc,seq(from=0,to=1,by=.1),all.inside = T)]
plot(density(rcp1$rc))
table(rcp1$rc)
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
rcp1$rc
length(which(rcp1$rc>.9))
length(which(rcp1$rc>.5))
length(which(rcp1$rc>.1))
s1$solution_1
sum(s1$solution_1)
length(which(rcp1$rc>.1))
plot(density(rcp1$rc))
length(which(rcp1$rc>.1))
table(rcp1$rc)
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
pal
gradientLegend(c(0,1),pal)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
plot(1:20, 1:20, pch = 19, cex=2, col = colfunc(20))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
gradientLegend(c(0,1),pal)
rasterImage(legend_image, 0, 0, 1,1)
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
plot(1:20, 1:20, pch = 19, cex=2, col = colfunc(20))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
rasterImage(legend_image, 0, 0, 1,1)
layout(matrix(1:2,ncol=2), width = c(2,1),height = c(1,1))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
rasterImage(legend_image, 0, 0, 1,1)
rasterImage(legend_image, 0, 0, 1,1)
rasterImage(legend_image, -2800000, 2800000, 210000,210000)
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
rasterImage(legend_image, -2800000, 2800000, 210000,210000)
library(plotfunctions)
install.packages("plotfunctions")
library(plotfunctions)
layout(matrix(1:1,ncol=2), width = c(2,1),height = c(1,1))
layout(matrix(1:1,ncol=1), width = c(2,1),height = c(1,1))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
gradientLegend(c(0,1),pal)
gradientLegend(c(0,1),pal,c(0,0,0,0))
gradientLegend(c(0,1),pal,pos=c(0,0,0,0))
gradientLegend(c(0,1),pal,pos=c(0,1,0,0))
gradientLegend(c(0,1),pal,pos=c(0,1,.1,0))
gradientLegend(c(0,1),pal,pos=c(.9,1,.1,0))
gradientLegend(c(0,1),pal,pos=c(1,1,.1,0))
plot(hex_grid, col=colorvector,border = "orange",add=T)
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
#legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
gradientLegend(c(0,1),pal,pos=c(1,1,.1,0))
#legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
gradientLegend(c(0,1),pal,pos=c(2,1,.1,0))
#legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
gradientLegend(c(0,1),pal,pos=c(1,2,.1,0))
#legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
gradientLegend(c(0,1),pal,pos=c(1,1,.9,0))
#legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
gradientLegend(c(0,1),pal,pos=c(1,.1,.9,.9))
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
#legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
gradientLegend(c(0,1),pal,pos=c(1,.1,.9,.9))
#legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
gradientLegend(c(0,1),pal,pos=c(.95,.1,.9,.9))
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
#legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
gradientLegend(c(0,1),pal,pos=c(.95,.1,.9,.9))
pal <- rev(brewer.pal(n, "spectral"))
pal <- rev(brewer.pal(n, "Spectral"))
int=classIntervals(rcp1$rc,n)
#int=classIntervals(dat$DOC,n,style="fixed",fixedBreaks=seq(0,6,l=2));#if you want specific breaks
colorvector=pal[findInterval(rcp1$rc,seq(from=0,to=1,by=.1),all.inside = T)]
plot(density(rcp1$rc))
length(which(rcp1$rc>.1))
layout(matrix(1:1,ncol=1), width = c(2,1),height = c(1,1))
legend_image <- as.raster(matrix(colfunc(20), ncol=1))
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
#legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
gradientLegend(c(0,1),pal,pos=c(.95,.1,.9,.9))
plot(density(rcp1$rc))
length(which(rcp1$rc>.1))
sum(s1$solution_1)
summary(rcp1$rc)
length(which(rcp1$rc>.1))
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
#legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
gradientLegend(c(0,1),pal,pos=c(.95,.1,.9,.9))
p1_frr <- p1 %>%  eval_ferrier_importance(data.frame(s1$solution_1))
p1_frr
p1_frr <- eval_ferrier_importance(p1,data.frame(s1$solution_1))
p1_frr
p1_frr <- eval_ferrier_importance(p1,data.frame(s1$solution_1))[["total"]]
p1_frr
plot(density(p1_frr))
colorvector=pal[findInterval(rcp1$rc,seq(from=0,to=max(rcp1$rc),by=.1),all.inside = T)]
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
#legend(ext(study_area_utm)[2]*.99, ext(study_area_utm)[4]*.92, legend=c("Not selected", "Selected 1x", "Selected 2x", "Selected 3x", "Selected 4x", "Selected 5x"),fill=c(NA, "#CCCCFF", "#9999FF", "#6565FF", "#3232FF", "#0000FF"),  cex=0.8,bg=NA)
gradientLegend(c(0,max(rcp1$rc)),pal,pos=c(.95,.1,.9,.9))
p1_frr <- eval_ferrier_importance(p1,data.frame(s1$solution_1))[["total"]]
int=classIntervals(p1_frr,n)
# color gradient
n=10
pal <- rev(brewer.pal(n, "Spectral"))
int=classIntervals(p1_frr,n)
colorvector=pal[findInterval(p1_frr,seq(from=0,to=max(p1_frr),by=.1),all.inside = T)]
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
gradientLegend(c(0,max(p1_frr)),pal,pos=c(.95,.1,.9,.9))
colorvector
colorvector=pal[findInterval(p1_frr,seq(from=0,to=max(p1_frr),length.out=10),all.inside = T)]
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
gradientLegend(c(0,max(p1_frr)),pal,pos=c(.95,.1,.9,.9))
p1_rwr <- eval_rare_richness_importance(p1,data.frame(s1$solution_1))
pal <- rev(brewer.pal(n, "Spectral"))
int=classIntervals(p1_rwr$rwr
,n)
colorvector=pal[findInterval(p1_rwr$rwr
,seq(from=0,to=max(p1_rwr$rwr
),length.out=10),all.inside = T)]
#Plot the Aceh shapefile and planning unit grid
plot(study_area_utm,col = "grey50", bg = "light blue", axes = TRUE, cex = 20)
text(ext(study_area_utm)[2], ext(study_area_utm)[4]*.99, paste0("Study Area:\n",study_area_utm$NAME_1))
plot(hex_grid, col=colorvector,border = "orange",add=T)
gradientLegend(c(0,max(p1_rwr$rwr
)),pal,pos=c(.95,.1,.9,.9))
p1_rwr$rwr
summary(p1_rwr$rwr)
library(classInt)
